{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-04-23T22:32:08.441Z",
    "end": "2025-04-23T22:32:25.554Z",
    "duration": 17113,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8480b78f-21a5-4d36-848d-97bd1912de49",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "81206f93-0d0d-43fd-aa06-da187db17672",
          "title": "search in Amazon again",
          "fullFile": "E:\\PROJECTS - QA\\Selenium_demo_JS\\test\\test_mocha_2.js",
          "file": "\\test\\test_mocha_2.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should find another product",
              "fullTitle": "search in Amazon again should find another product",
              "timedOut": null,
              "duration": 16164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('firefox').build();\nawait driver.get('https://www.amazon.com');\nawait driver.sleep(5000);\nawait driver.wait(until.elementIsVisible(driver.findElement(By.id(\"twotabsearchtextbox\"))), 10000);\nawait driver.findElement(By.id(\"twotabsearchtextbox\")).sendKeys('gi joe', Key.RETURN);\nawait driver.sleep(3000);\nlet items = await driver.findElements(By.className(\"a-link-normal s-line-clamp-4 s-link-style a-text-normal\"));\nfor (let i = 0; i < items.length; i++) {\n     let text = (await items[i].getText()).toString();\n     if (text.includes(\"Cobra\")) {\n          await items[i].click();\n          await driver.sleep(2000);\n          let title = await driver.findElement(By.id(\"title\")).getText();\n          let description = title.toString();\n\n          try {\n               assert(description.includes(\"Duke\"));\n          } catch (error) {\n               console.error(\"La descripción no incluye la palabra 'Duke'\");\n          }\n          break;\n     }\n}\nawait driver.quit();",
              "err": {},
              "uuid": "f8b073b0-0769-443b-9d5d-503b7b8a332d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8b073b0-0769-443b-9d5d-503b7b8a332d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16164,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "f837809b-75c7-4c7d-a816-df4ea944f577",
          "title": "search in Amazon",
          "fullFile": "E:\\PROJECTS - QA\\Selenium_demo_JS\\test\\test_mocha.js",
          "file": "\\test\\test_mocha.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should find a product",
              "fullTitle": "search in Amazon should find a product",
              "timedOut": null,
              "duration": 16950,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('firefox').build();\nawait driver.get('https://www.amazon.com');\nawait driver.sleep(5000);\nawait driver.wait(until.elementIsVisible(driver.findElement(By.id(\"twotabsearchtextbox\"))), 10000);\nawait driver.findElement(By.id(\"twotabsearchtextbox\")).sendKeys('gi joe', Key.RETURN);\nawait driver.sleep(3000);\nlet items = await driver.findElements(By.className(\"a-link-normal s-line-clamp-4 s-link-style a-text-normal\"));\nfor (let i = 0; i < items.length; i++) {\n     let text = (await items[i].getText()).toString();\n     if (text.includes(\"Duke\")) {\n          await items[i].click();\n          await driver.sleep(2000);\n          let title = await driver.findElement(By.id(\"title\")).getText();\n          let description = title.toString();\n\n          try {\n               assert(description.includes(\"Duke\"));\n          } catch (error) {\n               console.error(\"La descripción no incluye la palabra 'Duke'\");\n          }\n          break;\n     }\n}\nawait driver.quit();",
              "err": {},
              "uuid": "e5a988d7-df47-47d4-b5a7-c0b09fcb58e2",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5a988d7-df47-47d4-b5a7-c0b09fcb58e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16950,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesomeReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./mochawesome-custom_report",
        "reportFilename": "mochawesomeReport"
      },
      "version": "6.2.0"
    }
  }
}